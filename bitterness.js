// Generated by CoffeeScript 1.6.2
(function() {
  var bitternessModel, bitternessUnitsToRelativeRatio, gravityPoints, hbmBitternessRatio, originalBitternessRatio, relativeBitternessRatio, viewModel;

  gravityPoints = function(g) {
    return (g - 1) * 1000;
  };

  originalBitternessRatio = function(bu, og) {
    return bu / gravityPoints(og);
  };

  relativeBitternessRatio = function(bitternessRatio, og, fg) {
    var aparentAttentuationRate;

    aparentAttentuationRate = function(og, fg) {
      return (og - fg) / (og - 1);
    };
    return bitternessRatio * (1 + (aparentAttentuationRate(og, fg) - 0.7655));
  };

  bitternessUnitsToRelativeRatio = function(bu, og, fg) {
    var plato;

    plato = function(g) {
      return g / 4;
    };
    return bu / ((0.1808 * plato(gravityPoints(og))) + (0.8192 * plato(gravityPoints(fg))));
  };

  hbmBitternessRatio = function(bu, og, fg) {
    return bu / (gravityPoints(og) - gravityPoints(fg));
  };

  bitternessModel = function() {
    var m;

    m = {
      bu: ko.observable(""),
      og: ko.observable(""),
      fg: ko.observable(""),
      obr: ko.observable(""),
      rbr: ko.observable(""),
      bure: ko.observable(""),
      hbm: ko.observable("")
    };
    m.calculateRatios = function(m) {
      var bu, bure, fg, hbm, og, originalRatio, relativeRatio;

      bu = m.bu();
      og = m.og();
      fg = m.fg();
      originalRatio = originalBitternessRatio(bu, og);
      relativeRatio = relativeBitternessRatio(originalRatio, og, fg);
      bure = bitternessUnitsToRelativeRatio(bu, og, fg);
      hbm = hbmBitternessRatio(bu, og, fg);
      m.obr(Math.round(originalRatio * 100) / 100);
      m.rbr(Math.round(relativeRatio * 100) / 100);
      m.bure(Math.round(bure * 100) / 100);
      return m.hbm(Math.round(hbm * 100) / 100);
    };
    return m;
  };

  viewModel = function() {
    var model;

    model = bitternessModel();
    return model;
  };

  $(document).ready(function() {
    return ko.applyBindings(new viewModel());
  });

}).call(this);
